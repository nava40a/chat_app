version: '3.8'


services:

  db:
    image: postgres:15
    container_name: db
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_HOST_AUTH_METHOD: 'password'
    restart: always
    env_file:
      - .env

  app:
    container_name: app
    build: ./app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - 8000:8000
    volumes:
      - ./app:/code/app
      - ./alembic:/code/alembic
      - ./alembic.ini:/code/alembic.ini
    environment:
      PYTHONPATH: '/code/app'
    restart: always
    depends_on:
      - db
    env_file:
      - .env

  tg_bot:
    container_name: tg_bot
    build: ./tg_bot
    command: python main.py
    volumes:
      - ./tg_bot:/code/tg_bot
    restart: always
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    restart: always

  #celery:
  #  container_name: celery
  #  build: ./tg_bot
  #  command: celery -A tasks worker --loglevel=info --concurrency=4
  #  volumes:
  #    - ./tg_bot:/code/tg_bot
  #  environment:
  #    - CELERY_BROKER_URL=redis://redis:6379/0
  #  restart: always
  #  depends_on:
  #    - redis
  #  env_file:
  #    - .env

  #celery-beat:
  #  container_name: celery_beat
  #  build: ./tg_bot
  #  command: celery -A tasks beat --loglevel=info
  #  volumes:
  #    - ./tg_bot:/code/tg_bot
  #  environment:
  #    - CELERY_BROKER_URL=redis://redis:6379/0
  #  restart: always
  #  depends_on:
  #    - redis
  #  env_file:
  #    - .env

#  front:
#    container_name: front
#    build: ./front
#    ports:
#      - 3000:3000


volumes:
  postgres_data:
